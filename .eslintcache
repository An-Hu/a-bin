[{"/Users/huqizhi/Desktop/self/first-try/src/index.tsx":"1","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequest.ts":"2","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/main.tsx":"3","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequestNow.ts":"4","/Users/huqizhi/Desktop/self/first-try/src/hooks/useMethods/main.tsx":"5","/Users/huqizhi/Desktop/self/first-try/src/hooks/useDerivedState/main.tsx":"6","/Users/huqizhi/Desktop/self/first-try/src/hooks/useIntendedLazyValue/main.tsx":"7"},{"size":935,"mtime":1611742784686,"results":"8","hashOfConfig":"9"},{"size":614,"mtime":1611814867283,"results":"10","hashOfConfig":"9"},{"size":1831,"mtime":1611735056505,"results":"11","hashOfConfig":"9"},{"size":564,"mtime":1611814869394,"results":"12","hashOfConfig":"9"},{"size":1580,"mtime":1611734940770,"results":"13","hashOfConfig":"9"},{"size":1245,"mtime":1611739063299,"results":"14","hashOfConfig":"9"},{"size":2401,"mtime":1611742867548,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"qx3pb8",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/huqizhi/Desktop/self/first-try/src/index.tsx",["34"],"import { Card } from \"antd\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport RequestDemo from \"./hooks/useRequest/main\";\nimport 'antd/dist/antd.css';\nimport { MethodDemo } from \"./hooks/useMethods/main\";\nimport { DerivedState } from \"./hooks/useDerivedState/main\";\nimport { LazyValue } from \"./hooks/useIntendedLazyValue/main\";\ninterface mapItem{\n  title:string;\n  node: any;\n}\nconst map:mapItem[] = [\n  {\n    title:'useRequest',\n    node:(<RequestDemo></RequestDemo>)\n  },\n  {\n    title:'useMethods',\n    node:(<MethodDemo></MethodDemo>)\n  },\n  {\n    title:'useDerived',\n    node:(<DerivedState></DerivedState>)\n  },\n  {\n    title:'LazyValue',\n    node:(<LazyValue></LazyValue>)\n  }\n]\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    {map.map(r =>{ \n      return (<Card title={r.title}>\n        {r.node}\n      </Card>)\n    })}\n  </React.StrictMode>,\n  rootElement\n);\n",["35","36"],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequest.ts",["37","38"],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/main.tsx",["39","40"],"/*\n * @data: now\n */\nimport React, { useEffect,useRef,useState } from \"react\";\nimport { useRequest } from \"./useRequest\";\nimport { useRequestNow } from \"./useRequestNow\";\nimport { useRequestOther } from \"./useRequestOther\";\n\nconst p = (key:any) => {\n  return new Promise(function (resolve, reject) {\n    setTimeout(() => {\n      resolve(`传入的值为${key}(数据经过1秒种的传输到达这里)`);\n    }, 1000);\n  });\n};\n\nexport default function RequestDemo() {\n// 本地数据会变化，模仿用户操作的变化\nconst [localData,setData] = useState<any>(0);\nconst aa = useRef<any>()\n   useEffect(()=>{\n       const a = setInterval(() => {\n        setData(parseInt((Math.random()*100).toString(),10))\n       }, 1000)\n       aa.current = a;\n    //    return clearInterval(a)\n   },[])\n\n   // 本地数据会变化后引起的变化需要手动刷新\n  const { data, refresh } = useRequest(p,localData);\n\n  // 会根据本地数据的变化进行自动刷新\n  const {dataNow} = useRequestNow(p,localData);\n\n//useRequest 的另一种实现\nconst promise = (key:any) => {\n    return ()=>setTimeout(async () => {\n        await key\n      }, 1000);\n}\n// const b = (localData)=>promise\n// const {dataNow:dataOther} = useRequestOther((localData)=>promise)\n\n  console.log(data);\n  return (\n    <div className=\"App\">\n      {data === undefined ? \"正在加载\" : \"加载成功\"}\n      <div>这是现在的数据：{localData}</div>\n      <div>这是服务器现在的数据(不自动刷新)：{data}</div>\n      <div>这是服务器现在的数据（进行自动刷新）：{dataNow}</div>\n      {/* <div>这是另一种表现的数据（进行自动刷新）：{dataOther}</div> */}\n      <button onClick={refresh}>点击刷新</button>\n      <button onClick={()=>clearInterval(aa.current)}>点击停止</button>\n    </div>\n  );\n}\n","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequestNow.ts",["41"],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useMethods/main.tsx",[],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useDerivedState/main.tsx",[],["42","43"],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useIntendedLazyValue/main.tsx",[],{"ruleId":"44","severity":2,"message":"45","line":27,"column":12,"nodeType":"46","endLine":27,"endColumn":21},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":42,"nodeType":"53","messageId":"54","endLine":4,"endColumn":43},{"ruleId":"55","severity":1,"message":"56","line":17,"column":6,"nodeType":"57","endLine":17,"endColumn":8,"suggestions":"58"},{"ruleId":"51","severity":1,"message":"59","line":7,"column":10,"nodeType":"53","messageId":"54","endLine":7,"endColumn":25},{"ruleId":"51","severity":1,"message":"60","line":36,"column":7,"nodeType":"53","messageId":"54","endLine":36,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":4,"column":42,"nodeType":"53","messageId":"54","endLine":4,"endColumn":43},{"ruleId":"47","replacedBy":"61"},{"ruleId":"49","replacedBy":"62"},"react/jsx-no-undef","'LazyValue' is not defined.","JSXIdentifier","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'E' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'params' and 'task'. Either include them or remove the dependency array. If 'task' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["65"],"'useRequestOther' is defined but never used.","'promise' is assigned a value but never used.",["63"],["64"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [params, task]",{"range":"68","text":"69"},[431,433],"[params, task]"]