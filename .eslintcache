[{"/Users/huqizhi/Desktop/self/first-try/src/index.tsx":"1","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequest.ts":"2","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/main.tsx":"3","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequestNow.ts":"4","/Users/huqizhi/Desktop/self/first-try/src/hooks/useMethods/main.tsx":"5","/Users/huqizhi/Desktop/self/first-try/src/hooks/useDerivedState/main.tsx":"6","/Users/huqizhi/Desktop/self/first-try/src/hooks/useIntendedLazyValue/main.tsx":"7"},{"size":935,"mtime":1611742784686,"results":"8","hashOfConfig":"9"},{"size":614,"mtime":1611814867283,"results":"10","hashOfConfig":"9"},{"size":1927,"mtime":1612170594843,"results":"11","hashOfConfig":"9"},{"size":564,"mtime":1611814869394,"results":"12","hashOfConfig":"9"},{"size":1580,"mtime":1611734940770,"results":"13","hashOfConfig":"9"},{"size":1245,"mtime":1611739063299,"results":"14","hashOfConfig":"9"},{"size":2401,"mtime":1611742867548,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"qx3pb8",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/huqizhi/Desktop/self/first-try/src/index.tsx",["35"],"import { Card } from \"antd\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport RequestDemo from \"./hooks/useRequest/main\";\nimport 'antd/dist/antd.css';\nimport { MethodDemo } from \"./hooks/useMethods/main\";\nimport { DerivedState } from \"./hooks/useDerivedState/main\";\nimport { LazyValue } from \"./hooks/useIntendedLazyValue/main\";\ninterface mapItem{\n  title:string;\n  node: any;\n}\nconst map:mapItem[] = [\n  {\n    title:'useRequest',\n    node:(<RequestDemo></RequestDemo>)\n  },\n  {\n    title:'useMethods',\n    node:(<MethodDemo></MethodDemo>)\n  },\n  {\n    title:'useDerived',\n    node:(<DerivedState></DerivedState>)\n  },\n  {\n    title:'LazyValue',\n    node:(<LazyValue></LazyValue>)\n  }\n]\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    {map.map(r =>{ \n      return (<Card title={r.title}>\n        {r.node}\n      </Card>)\n    })}\n  </React.StrictMode>,\n  rootElement\n);\n",["36","37"],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequest.ts",["38","39"],"\nimport * as React from \"react\";\nexport type Request<K, O> = (key: K) => Promise<O>;\nexport interface RequestResult<O = void, E = Error> {\n  data: O;\n  refresh: () => void;\n}\nexport function useRequest<K, O = void, E = Error>(\n  task: Request<K, O>,\n  params: K\n): RequestResult<O, E> {\n  const [state, setState] = React.useState<O>();\n  React.useEffect(() => {\n    task(params).then((data) => {\n      setState(data);\n    });\n  }, []);\n  const refresh = React.useCallback(() => {\n    task(params).then((data) => {\n      setState(data);\n    });\n  }, [task, params]);\n  return {\n    data: state!,\n    refresh\n  };\n}\n","/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/main.tsx",["40","41"],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useRequest/useRequestNow.ts",["42"],"// 利用useEffect的判断机制，只要params发生改变就进行\nimport * as React from \"react\";\nexport type Request<K, O> = (key: K) => Promise<O>;\nexport interface RequestResult<O = void, E = Error> {\n  dataNow: O;\n}\nexport function useRequestNow<K, O = void, E = Error>(\n  task: Request<K, O>,\n  params: K\n): RequestResult<O, E> {\n    console.log(params)\n  const [state, setState] = React.useState<O>();\n  React.useEffect(() => {\n    task(params).then((data) => {\n      setState(data);\n    });\n  }, [params, task]);\n\n  return {\n    dataNow: state!,\n  };\n}\n","/Users/huqizhi/Desktop/self/first-try/src/hooks/useMethods/main.tsx",[],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useDerivedState/main.tsx",[],["43","44"],"/Users/huqizhi/Desktop/self/first-try/src/hooks/useIntendedLazyValue/main.tsx",[],{"ruleId":"45","severity":2,"message":"46","line":27,"column":12,"nodeType":"47","endLine":27,"endColumn":21},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":42,"nodeType":"54","messageId":"55","endLine":4,"endColumn":43},{"ruleId":"56","severity":1,"message":"57","line":17,"column":6,"nodeType":"58","endLine":17,"endColumn":8,"suggestions":"59"},{"ruleId":"52","severity":1,"message":"60","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":25},{"ruleId":"52","severity":1,"message":"61","line":37,"column":7,"nodeType":"54","messageId":"55","endLine":37,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":4,"column":42,"nodeType":"54","messageId":"55","endLine":4,"endColumn":43},{"ruleId":"48","replacedBy":"62"},{"ruleId":"50","replacedBy":"63"},"react/jsx-no-undef","'LazyValue' is not defined.","JSXIdentifier","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'E' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'params' and 'task'. Either include them or remove the dependency array. If 'task' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["66"],"'useRequestOther' is defined but never used.","'promise' is assigned a value but never used.",["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [params, task]",{"range":"69","text":"70"},[431,433],"[params, task]"]